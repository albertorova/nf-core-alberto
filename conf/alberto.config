/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running minimal tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run nf-core/alberto -profile test,<docker/singularity> --outdir <OUTDIR>

----------------------------------------------------------------------------------------
*/

try {
    includeConfig "https://raw.githubusercontent.com/nf-core/modules/master/tests/config/test_data.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/modules test data config")
}

params {
    config_profile_name        = 'Test profile'
    config_profile_description = 'Minimal test dataset to check pipeline function'

    dbsnp             = params.test_data['homo_sapiens']['genome']['dbsnp_146_hg38_vcf_gz']
    fasta             = params.test_data['homo_sapiens']['genome']['genome_fasta']
    intervals         = params.test_data['homo_sapiens']['genome']['genome_interval_list']
    known_indels      = params.test_data['homo_sapiens']['genome']['mills_and_1000g_indels_vcf_gz']
    germline_resource = params.test_data['homo_sapiens']['genome']['gnomad_r2_1_1_vcf_gz']


    snpeff_db         = 'WBcel235.105'
    snpeff_genome     = 'WBcel235'
    snpeff_version    = '5.1'
    vep_cache_version = 106
    vep_version       = '106.1'


    // Limit resources so that this can run on GitHub Actions
    max_cpus   = 2
    max_memory = '6.GB'
    max_time   = '6.h'

    // Input data
    // TODO nf-core: Specify the paths to your test data on nf-core/test-datasets
    // TODO nf-core: Give any required params for the test so that command line flags are not needed
    input  = 'https://raw.githubusercontent.com/nf-core/test-datasets/viralrecon/samplesheet/samplesheet_test_illumina_amplicon.csv'

    // Genome references
    genome = 'R64-1-1'

    schema_ignore_params = 'test_data,genomes,known_indels,intervals,dbsnp,snpeff_version,snpeff_genome,snpeff_db,snpeff_cache,anotador,caller,mapeador,vep_version,vep_cache_version,vep_cache,germline_resource'
}
